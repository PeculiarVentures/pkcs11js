name: test

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install SoftHSM
        run: |
          sudo apt-get update -y
          sudo apt-get install -y softhsm2
          echo "SoftHSM2 is installed"
          # Create a configuration file
          echo "directories.tokendir = ${{ github.workspace }}/token" > softhsm2.conf
          echo "objectstore.backend = file" >> softhsm2.conf
          echo "log.level = ERROR" >> softhsm2.conf
          echo "slots.removable = false" >> softhsm2.conf
          echo "slots.mechanisms = ALL" >> softhsm2.conf
          echo "library.reset_on_fork = false" >> softhsm2.conf
          # Create a directory for the token
          mkdir -p ${{ github.workspace }}/token
          # Create a symlink to the SoftHSM library
          softhsm2-util --init-token --so-pin "12345" --pin "12345" --slot 0 --label "My slot 0"
        env:
          SOFTHSM2_CONF: ${{ github.workspace }}/softhsm2.conf

      - name: Install NSS
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libnss3-tools

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Run test with coverage
        run: npm run coverage
        env:
          SOFTHSM2_CONF: ${{ github.workspace }}/softhsm2.conf

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  build-os:
    needs: build-and-test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        node-version:
          - 20.x # lts

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
